/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.20
 * Generated at: 2015-05-18 05:29:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.src;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.User;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import org.json.JSONArray;
import org.json.JSONObject;
import java.util.ArrayList;
import java.io.File;

public final class mapPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/src/navbar.jsp", Long.valueOf(1430117268000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("org.json.JSONObject");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("model.User");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("org.json.JSONArray");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<!-- http://127.0.0.1:8080/Housing/src/mapPage.jsp -->\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta charset= \"utf-8\"/>\n");
      out.write("\t<title> USC Housing Map </title>\n");
      out.write("\t<link href=\"../lib/css/bootstrap.css\" rel=\"stylesheet\">\n");
      out.write("\t  <link href=\"../lib/css/navbar.css\" rel=\"stylesheet\">\n");
      out.write("\t<link href=\"../lib/css/mapPage.css\" rel= \"stylesheet\">\n");
      out.write("\t<script src=\"../lib/js/jquery-1.11.2.min.js\"> </script>\n");
      out.write("\t<script src=\"../lib/js/bootstrap.js\"> </script>\n");
      out.write("\t\n");
      out.write("\t<script src=\"https://maps.googleapis.com/maps/api/js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div id=\"overallContent\">\n");
      out.write("\n");
      out.write("<!-- Make any changes to the nav bar here! -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Creating the Nav Bar -->\r\n");
      out.write("  \t<div class= \"navbar navbar-fixed-top navbar-inverse\">\r\n");
      out.write("\t  \t<div class=\"container\">\r\n");
      out.write("\t  \t\r\n");
      out.write("\t  \t<a href=\"#\" class=\"pull-left navbar-brand\"><img width=\"90px\" height=\"22px\" src=\"/Housing/lib/images/houSCingWhite.png\"></a>  \t\r\n");
      out.write("\t  \t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t  \t\t\t<li id=\"search\">\r\n");
      out.write("\t\t        <a href=\"/Housing/search\"> \r\n");
      out.write("\t\t          <i class=\"glyphicon glyphicon-search\">\r\n");
      out.write("\t\t          </i> Search\r\n");
      out.write("\t\t        </a>\r\n");
      out.write("\t\t      </li>\r\n");
      out.write("\t  \t\t</ul>\r\n");
      out.write("\t  \t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t  \t\t\t<li id=\"home\">\r\n");
      out.write("\t\t        <a href=\"/Housing/src/mapPage.jsp\"> \r\n");
      out.write("\t\t          <i class=\"glyphicon glyphicon-map-marker\">\r\n");
      out.write("\t\t          </i> Map\r\n");
      out.write("\t\t        </a>\r\n");
      out.write("\t\t      </li>\r\n");
      out.write("\t  \t\t</ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\r\n");
      out.write("\t\t");
 if(session.getAttribute("curr") != null){
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t  \t\t\t<li id=\"chatButtonOnNavbar\">\r\n");
      out.write("\t\t          <a href=\"/Housing/src/chat.jsp\"> \r\n");
      out.write("\t\t          <i class=\"glyphicon glyphicon-flag\"> </i> Chat\r\n");
      out.write("\t\t          </a>\r\n");
      out.write("\t\t      </li>\r\n");
      out.write("\t  \t\t</ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t  \t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t  \t\t\t<li id=\"chatButtonOnNavbar\">\r\n");
      out.write("\t\t          <a href=\"/Housing/src/friends.jsp\"> \r\n");
      out.write("\t\t          <i class=\"glyphicon glyphicon-heart\"> </i> Friends\r\n");
      out.write("\t\t          </a>\r\n");
      out.write("\t\t      </li>\r\n");
      out.write("\t  \t\t</ul>\r\n");
      out.write("\t  \t\t\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav pull-right\">\r\n");
      out.write("\t\t\t<p class=\"navbar-text\">Welcome, ");
      out.print( ((User)(session.getAttribute("curr"))).getFirstName() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\r\n");
      out.write("          \t\t\t<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\r\n");
      out.write("          \t\t\t<i class=\"glyphicon glyphicon-user\"></i> <span class=\"caret\"></span></a>\r\n");
      out.write("          \t\t\t<ul class=\"dropdown-menu\" role=\"menu\">\r\n");
      out.write("            \t\t\t<li>\r\n");
      out.write("\t\t        \t\t\t<a href=\"/Housing/profile\"> \r\n");
      out.write("\t\t          \t\t\t<i class=\"glyphicon glyphicon-user\">\r\n");
      out.write("\t\t          \t\t\t</i> My Profile\r\n");
      out.write("\t\t       \t\t\t \t</a>\r\n");
      out.write("\t\t      \t\t\t</li>\r\n");
      out.write("\t\t      \t\t\t<li>\r\n");
      out.write("\t\t        \t\t\t<a href=\"/Housing/top-housing\"> \r\n");
      out.write("\t\t          \t\t\t<i class=\"glyphicon glyphicon-map-marker\">\r\n");
      out.write("\t\t          \t\t\t</i> Top Housing\r\n");
      out.write("\t\t       \t\t\t \t</a>\r\n");
      out.write("\t\t      \t\t\t</li>\r\n");
      out.write("\t\t\t            <li class=\"divider\"></li>\r\n");
      out.write("\t\t\t            <li>\r\n");
      out.write("\t\t\t            \t<a href=\"/Housing/logout\">\r\n");
      out.write("\t\t\t            \t<i class=\"glyphicon glyphicon-off\">\r\n");
      out.write("\t\t          \t\t\t</i> Logout\r\n");
      out.write("\t\t\t            \t</a>\r\n");
      out.write("\t\t\t            </li>\r\n");
      out.write("          \t\t\t</ul>   \r\n");
      out.write("          \t\t</li>   \t\t\t\r\n");
      out.write("          \t</ul>\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t ");
} else {
      out.write("\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t \t<ul class=\"nav navbar-nav pull-right\">\r\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\r\n");
      out.write("          \t\t\t<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">\r\n");
      out.write("          \t\t\t<i class=\"glyphicon glyphicon-user\"></i> <span class=\"caret\"></span></a>\r\n");
      out.write("          \t\t\t<ul class=\"dropdown-menu\" role=\"menu\">\r\n");
      out.write("            \t\t\t<li>\r\n");
      out.write("\t\t        \t\t\t<a href=\"/Housing/login\"> \r\n");
      out.write("\t\t          \t\t\t<i class=\"glyphicon glyphicon-user\">\r\n");
      out.write("\t\t          \t\t\t</i> Login\r\n");
      out.write("\t\t        \t\t\t</a>\r\n");
      out.write("\t\t      \t\t\t</li>\r\n");
      out.write("\t\t\t            <li class=\"divider\"></li>\r\n");
      out.write("\t\t\t            <li>\r\n");
      out.write("\t\t        \t\t\t<a href=\"/Housing/signup\"> \r\n");
      out.write("\t\t          \t\t\t<i class=\"glyphicon glyphicon-circle-arrow-up\">\r\n");
      out.write("\t\t          \t\t\t</i> Sign Up\r\n");
      out.write("\t\t        \t\t\t</a>\r\n");
      out.write("\t\t      \t\t\t</li>\r\n");
      out.write("          \t\t\t</ul>   \r\n");
      out.write("          \t\t</li>   \t\t\t\r\n");
      out.write("          \t</ul>\r\n");
      out.write("          \r\n");
      out.write("         ");
} 
      out.write("   \r\n");
      out.write("\t\t \r\n");
      out.write("\t  \t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<!-- Finished creating the Nav Bar -->\r\n");
      out.write("\r\n");
 
//setting the type for the alert box
String alertType = null;
String alertPhrase = null;
if(request.getAttribute("success") != null && (Boolean)request.getAttribute("success") == true){
	alertType = "alert-success";
	alertPhrase = "Success!";
} else if (request.getAttribute("success") != null && (Boolean)request.getAttribute("success") == false) {
	alertType = "alert-danger";
	alertPhrase = "Error!";
}

      out.write("\r\n");
      out.write("\r\n");
 if(alertType != null){ 
      out.write("\r\n");
      out.write("<div class=\"alert ");
      out.print( alertType );
      out.write(" alert-dismissable fade in\">\r\n");
      out.write("    <span class=\"close\" data-dismiss=\"alert\">&times;</span>\r\n");
      out.write("    <strong>");
      out.print( alertPhrase );
      out.write("</strong> ");
      out.print( request.getAttribute("message") );
      out.write("\r\n");
      out.write("</div>\r\n");
 request.setAttribute("success", null); 
      out.write('\r');
      out.write('\n');
 request.setAttribute("message", null); 
      out.write('\r');
      out.write('\n');
 } 
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");



	
	ArrayList<String>  houseAddressArray= new ArrayList();
	ArrayList<Integer> houseBedArray= new ArrayList();
	ArrayList<Integer> houseBathArray= new ArrayList();
	ArrayList<Integer> houseRentArray= new ArrayList();
	ArrayList<Integer> houseWifiArray= new ArrayList();
	ArrayList<Integer> houseAcArray= new ArrayList();
	ArrayList<Integer> houseParkingArray= new ArrayList();
	ArrayList<Integer> houseCableArray= new ArrayList();
	ArrayList<Double>  houseLatitudeArray= new ArrayList();
	ArrayList<Double>  houseLongitudeArray= new ArrayList();
	ArrayList<Double>  houseDistanceArray= new ArrayList();
	ArrayList<Integer> houseMinutesArray= new ArrayList();
	ArrayList<Integer> houseUscOwnedArray= new ArrayList();
	ArrayList<Integer> housevisibilityCounterArray= new ArrayList();
	ArrayList<String>  houseHouseOrApartmentArray= new ArrayList();
	//ArrayList<Integer> houseSameFilterCheckArray= new ArrayList();
	

	JSONArray ja= new JSONArray();
	try{
	
		Class.forName("com.mysql.jdbc.Driver");
		Connection conn= DriverManager.getConnection("jdbc:mysql://localhost/csci201_database?user=root&password=212340Cba");   
	
		 PreparedStatement ps= conn.prepareStatement("SELECT * FROM housing_table");
		 ResultSet rs= ps.executeQuery();
		 

		 
		while(rs.next())
		{
			 
			 String address= rs.getString("address");
			 Integer bed= rs.getInt("bed");
			 Integer bath= rs.getInt("bath");
			 Integer rent= rs.getInt("rent");
			 Integer wifi= rs.getInt("wifi");
			 Integer ac = rs.getInt("ac");
			 Integer parking=rs.getInt("parking");
			 Integer cable= rs.getInt("cable");
			 Double latitude=rs.getDouble("latitude");
			 Double longitude= rs.getDouble("longitude");
			 Double distance= rs.getDouble("distance");
			 Integer minutes= rs.getInt("minutes");
			 Integer uscOwned= rs.getInt("uscOwned");
			 Integer visibilityCounter= rs.getInt("visibilityCounter");
			 String houseOrApartment= rs.getString("houseOrApartment");
			
			 
			 
			 //to account for last row that is null
			 if(address==null)
			 {
				 break;
			 }
			 
			 houseAddressArray.add(address);
			 houseBedArray.add(bed);
			 houseBathArray.add(bath);
			 houseRentArray.add(rent);
			 houseWifiArray.add(wifi);
			 houseAcArray.add(ac);
			 houseParkingArray.add(parking);
			 houseCableArray.add(cable);
			 houseLatitudeArray.add(latitude);
			 houseLongitudeArray.add(longitude);
			 houseDistanceArray.add(distance);
			 houseMinutesArray.add(minutes);
			 houseUscOwnedArray.add(uscOwned);
			 housevisibilityCounterArray.add(visibilityCounter);
			 houseHouseOrApartmentArray.add(houseOrApartment);

		}
		
		


		 
		 rs.close();
		 conn.close();
		 
		
		
	}
	catch(SQLException sqle)
	{
		out.println("SQLE: " +sqle.getMessage());
	}
	catch(ClassNotFoundException cnfe)
	{
		out.println("CNFE: " + cnfe.getMessage());
	}
	
	    
	   
	    
	    for(int ii=0; ii<houseAddressArray.size(); ii++)
	    {
	    	JSONObject jo= new JSONObject();
	    	jo.put("address", houseAddressArray.get(ii));
	    	jo.put("bed", houseBedArray.get(ii));
	    	jo.put("bath", houseBathArray.get(ii));
	    	jo.put("rent", houseRentArray.get(ii));
	    	jo.put("wifi", houseWifiArray.get(ii));
	    	jo.put("ac", houseAcArray.get(ii));
	    	jo.put("parking", houseParkingArray.get(ii));
	    	jo.put("cable", houseCableArray.get(ii));
	    	jo.put("latitude", houseLatitudeArray.get(ii));
	    	jo.put("longitude", houseLongitudeArray.get(ii));
	    	jo.put("distance", houseDistanceArray.get(ii));
	    	jo.put("minutes", houseMinutesArray.get(ii));
	    	jo.put("uscOwned", houseUscOwnedArray.get(ii));
	    	jo.put("visibilityCounter", housevisibilityCounterArray.get(ii));
	    	jo.put("houseOrApartment", houseHouseOrApartmentArray.get(ii));

	    	ja.put(jo);
	    }
	    


      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<!-- initialize map after getting all of the data from the database.  first set the variables so the\n");
      out.write("\tjavascript file can actually find them -->\n");
      out.write("\t<script>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\tvar myArray= ");
      out.print( ja );
      out.write("\n");
      out.write("\tvar arrayAsString= JSON.stringify(myArray);\n");
      out.write("\t//parse takes in a string, so need to convert the array into a string using JSON.stringfy()\n");
      out.write("\tvar listObj= JSON.parse(arrayAsString);\n");
      out.write("\t\n");
      out.write("\t//make this element visible to both scripts.\n");
      out.write("\tvar map;\n");
      out.write("\tvar markers= [];\n");
      out.write("\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container-fluid\" id=\"mainBody\">\n");
      out.write("\t<div id=\"filter-bar\">\n");
      out.write("\t\t<div class=\"filterRow1\">\n");
      out.write("\t\t\t<label for=\"numBeds\"> Beds</label>\n");
      out.write("\t\t\t<select id=\"numBeds\">\n");
      out.write("\t\t\t\t<option value=\"-1\">Any </option>\n");
      out.write("\t\t\t\t<option value=\"1\"> 1</option>\n");
      out.write("\t\t\t\t<option value=\"2\"> 2</option>\n");
      out.write("\t\t\t\t<option value =\"3\">3 </option>\n");
      out.write("\t\t\t\t<option value =\"4\">4 </option>\n");
      out.write("\t\t\t\t<option value= \"5\"> 5+</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"numBaths\">&emsp; Baths:</label>\n");
      out.write("\t\t\t<select id=\"numBaths\">\n");
      out.write("\t\t\t\t<option value=\"-1\">Any</option>\n");
      out.write("\t\t\t\t<option value=\"1\">1</option>\n");
      out.write("\t\t\t\t<option value=\"2\">2</option>\n");
      out.write("\t\t\t\t<option value=\"3\">3</option>\n");
      out.write("\t\t\t\t<option value=\"4\">4</option>\n");
      out.write("\t\t\t\t<option value=\"5\">5+</option>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"priceRange\">&emsp; Max Price:</label>\n");
      out.write("\t\t\t<select id=\"priceRange\">\n");
      out.write("\t\t\t\t<option value= \"-1\"> Any </option>\n");
      out.write("\t\t\t\t");
for(int ii=500; ii<=2500; ii+=50) 
				 {
				
      out.write("\n");
      out.write("\t\t\t\t\t<option value= \"");
      out.print(ii);
      out.write("\"> $");
      out.print(ii);
      out.write(" </option>\n");
      out.write("\t\t\t\t");

				 }
				
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"distanceMiles\">&emsp; Max Distance: </label>\n");
      out.write("\t\t\t<select id=\"distanceMiles\">\n");
      out.write("\t\t\t\t<option value=\"-1\"> Any Miles</option>\n");
      out.write("\t\t\t\t<option value =\".1\"> .1 miles </option>\n");
      out.write("\t\t\t\t<option value =\".2\"> .2 miles </option>\n");
      out.write("\t\t\t\t<option value =\".3\"> .3 miles </option>\n");
      out.write("\t\t\t\t<option value =\".4\"> .4 miles </option>\n");
      out.write("\t\t\t\t<option value =\".5\"> .5 miles </option>\n");
      out.write("\t\t\t\t<option value =\".6\"> .6 miles </option>\n");
      out.write("\t\t\t\t<option value =\".7\"> .7 miles </option>\n");
      out.write("\t\t\t\t<option value =\".8\"> .8 miles </option>\n");
      out.write("\t\t\t\t<option value =\".9\"> .9 miles </option>\n");
      out.write("\t\t\t\t<option value =\"1.0\"> 1.0 miles </option>\n");
      out.write("\t\t\t\t<option value =\"1.1\"> 1.1 miles </option>\n");
      out.write("\t\t\t\t<option value =\"1.2\"> 1.2 miles </option>\n");
      out.write("\t\t\t\t<option value =\"1.3\"> 1.3 miles </option>\n");
      out.write("\t\t\t\t<option value =\"1.4\"> 1.4 miles </option>\n");
      out.write("\t\t\t\t<option value =\"1.5\"> 1.5 miles </option>\n");
      out.write("\t\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"distanceMinutes\"> &emsp; </label>\n");
      out.write("\t\t\t<select id=\"distanceMinutes\">\n");
      out.write("\t\t\t\t<option value=\"-1\"> Any Minutes</option>\n");
      out.write("\t\t\t\t");
 for(int ii=5; ii<=25; ii++)
				  {
				
      out.write("\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(ii);
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(ii);
      out.write(" minutes </option>\n");
      out.write("\t\t\t\t");

				  }
				
      out.write("\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"filterRow2\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"wifiCheckbox\"> Wifi:</label>\n");
      out.write("\t\t\t<input type=\"checkbox\" id=\"wifiCheckbox\" >\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"acCheckbox\" class=\"row2Item\"> Air Conditioning:</label>\n");
      out.write("\t\t\t<input type=\"checkbox\" id=\"acCheckbox\" >\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"parkingCheckbox\"  class=\"row2Item\"> Parking:</label>\n");
      out.write("\t\t\t<input type=\"checkbox\" id=\"parkingCheckbox\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"cableCheckbox\" class=\"row2Item\"> Cable:</label>\n");
      out.write("\t\t\t<input type=\"checkbox\" id=\"cableCheckbox\" >\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<label for=\"uscOwnedCheckbox\" class=\"row2Item\"> USC Owned:</label>\n");
      out.write("\t\t\t<input type=\"checkbox\" id=\"uscOwnedCheckbox\">\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"uscLogo\">\n");
      out.write("\n");
      out.write("\t\t<img src=\"../lib/images/usc.jpg\" alt=\"usc logo\" id=\"uscLogoImg\"> \n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t<div id=\"map-canvas\"> \n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<div id=\"pictureMenu\" style=\"cursor: pointer;\"> \n");
      out.write("\t\t");
 for(int ii=0; ii<ja.length(); ii++)
			{
					JSONObject jsonObj= ja.getJSONObject(ii);
					String address= jsonObj.getString("address");
					int bed= jsonObj.getInt("bed");
					int bath= jsonObj.getInt("bath");
					int rent= jsonObj.getInt("rent");
					int wifi=jsonObj.getInt("wifi");
					int ac= jsonObj.getInt("ac");
					int parking=jsonObj.getInt("parking");
					int cable= jsonObj.getInt("cable");
					double distance= jsonObj.getDouble("distance");
					int minutes= jsonObj.getInt("minutes");
					int uscOwned= jsonObj.getInt("uscOwned");
					
					//converting the spaces in the addres to underscores for the img url
					String img=address.replace(' ', '_');
					
		
							
					String yesOrNo_wifi="";
					if(wifi==1)
					{
						yesOrNo_wifi="YES";
					}
					else
					{
						yesOrNo_wifi="NO";
					}			
					
					String yesOrNo_ac="";
					if(ac==1)
					{
						yesOrNo_ac="YES";
					}
					else
					{
						yesOrNo_ac="NO";
					}
					
					String yesOrNo_parking="";
					if(parking==1)
					{
						yesOrNo_parking="YES";
					}
					else
					{
						yesOrNo_parking="NO";
					}
					
					String yesOrNo_cable="";
					if(cable==1)
					{
						yesOrNo_cable="YES";
					}
					else
					{
						yesOrNo_cable="NO";
					}
							

					String yesOrNo_uscOwned="";
					if(uscOwned==1)
					{
						yesOrNo_uscOwned="YES";
					}
					else
					{
						yesOrNo_uscOwned="NO";
					}
		
      out.write("\n");
      out.write("\t\t\t\t<div id= \"");
      out.print(address );
      out.write("\" class=\"eachHouse\">\n");
      out.write("\t\t\t\t\t<div class= \"titleForEachHouse\">\n");
      out.write("\t\t\t\t\t\t");
      out.print( address );
      out.write("\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t<div class= \"houseAttributes\">\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<span class=\"attributesLabel\"> Bed/Bath: </span>");
      out.print(bed );
      out.write("  bd/");
      out.print(bath);
      out.write("ba  &emsp;&emsp;&emsp; \n");
      out.write("\t\t\t\t\t\t");

						//account for formating issues of extra space
						if(bed<10)
						{ 
						
      out.write("\n");
      out.write("\t\t\t\t\t\t\t&nbsp;\n");
      out.write("\t\t\t\t\t\t");
 	
						}
						
      out.write(" \n");
      out.write("\t\t\t\t\t\t <span class=\"attributesLabel\"> Rent: </span>$");
      out.print( rent );
      out.write(" <br>\n");
      out.write("\t\t\t\t\t\t<span class=\"attributesLabel\">Distance: </span> ");
      out.print( distance );
      out.write(" miles &emsp; &emsp; &nbsp;&nbsp; &nbsp;  <span class=\"attributesLabel\">USC Owned: </span>");
      out.print( yesOrNo_uscOwned);
      out.write("\n");
      out.write("\t\t\t\t\t\t<img src=\"../lib/images/");
      out.print(img);
      out.write(".jpg\" class=\"houseIcon\"> \n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div id=\"");
      out.print(address );
      out.write("_fullInfo\" style=\"display: none;\" class= houseFullInfo>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t<div class=\"titleForEachHouse_fullInfo\">\n");
      out.write("\t\t\t\t\t\t ");
      out.print(address );
      out.write("\t\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t<li>Number of Beds: ");
      out.print(bed );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t<li>Number of Baths: ");
      out.print(bath );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t<li>Rent: $");
      out.print(rent );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t<li>Distance (miles): ");
      out.print(distance );
      out.write(" mi </li>\n");
      out.write("\t\t\t\t\t\t<li>Minutes from Tommy: ");
      out.print(minutes );
      out.write(" min</li>\t\n");
      out.write("\t\t\t\t\t\t<li>Wifi: ");
      out.print(yesOrNo_wifi );
      out.write(" </li>\t\n");
      out.write("\t\t\t\t\t\t<li>Air Conditioning: ");
      out.print(yesOrNo_ac );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t<li>Parking: ");
      out.print(yesOrNo_parking );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t<li>Cable: ");
      out.print(yesOrNo_cable );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t<li>USC Owned: ");
      out.print(yesOrNo_uscOwned );
      out.write(" </li>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t");
 
			}
		
      out.write("\t\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<script>\n");
      out.write("\t\tvar images= document.getElementsByClassName(\"houseIcon\");\n");
      out.write("\t\n");
      out.write("\t\tfor(var aa=0; aa<images.length; aa++)\n");
      out.write("\t\t{\t\n");
      out.write("\t\t\tvar image= images[aa];\n");
      out.write("\t\t\timage.onerror= function(){\n");
      out.write("\t\t\t\tthis.src= \"../lib/images/genericHouse.jpg\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("\t\n");
      out.write("\t<script src=\"../lib/js/mapPage_googleMaps.js\"> </script>  \n");
      out.write("\t<script src= \"../lib/js/mapPage_filters.js\"> </script>\n");
      out.write("\t<script src= \"../lib/js/mapPage_pictureMenu.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
